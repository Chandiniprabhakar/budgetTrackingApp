// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "./node_modules/@prisma/client"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model UserSettings {
  userId   String @id
  currency String
}

model Category {
  createdAt DateTime @default(now())
  name      String
  userId    String
  icon      String
  type      String   @default("income")

  @@unique([name, userId, type])
}

model Transaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt // Corrected the name from `updateAt` to `updatedAt`

  amount       Float
  description  String? // Make the description field optional
  date         DateTime
  userId       String
  type         String   @default("income")
  category     String
  categoryIcon String
}

model MonthHistory {
  userId  String
  day     Int
  month   Int
  year    Int
  income  Float
  expense Float

  @@id([day, month, year, userId])
}

model YearHistory {
  userId  String
  month   Int
  year    Int
  income  Float
  expense Float

  @@id([month, year, userId])
}

model BudgetLimit {
  id     String @id @default(uuid())
  userId String
  month  Int
  year   Int
  limit  Float

  @@unique([userId, month, year], name: "userId_month_year")
}

model UserPoints {
  id        String   @id @default(uuid())
  userId    String
  points    Int      @default(0)
  reason    String
  createdAt DateTime @default(now())
}

model Notification {
  id        String   @id @default(uuid())
  userId    String
  message   String
  createdAt DateTime @default(now())
  type      String // e.g. "warning", "suggestion", "reward"
  read      Boolean  @default(false)
}
